// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bind": {
            "get": {
                "description": "Returns json object with context",
                "tags": [
                    "Account"
                ],
                "summary": "read context bound to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Returns json with confirmation",
                "tags": [
                    "Account"
                ],
                "summary": "Bind context to account",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.AccountServerMap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/creds/operator/{operator}/account/{account}/user/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Generate user credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operators list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User was not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/generate/config": {
            "get": {
                "tags": [
                    "Generate"
                ],
                "summary": "Sends configuration for nats server with resolver as this operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "text/plain config file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Generate"
                ],
                "summary": "Stores configuration for nats server with resolver as this operator in kubernetes secret",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.storeConfigForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nats/consumer": {
            "post": {
                "tags": [
                    "NATS"
                ],
                "summary": "Gets consumers for user",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.addNatsConsumerForm"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nats/consumers": {
            "get": {
                "tags": [
                    "NATS"
                ],
                "summary": "Gets consumers for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "operator name",
                        "name": "operator",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account name",
                        "name": "account",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "server url",
                        "name": "server_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "stream name",
                        "name": "stream_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nats/stream": {
            "post": {
                "tags": [
                    "NATS"
                ],
                "summary": "Add stream for user",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.addNatsStreamForm"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nats/streams": {
            "get": {
                "tags": [
                    "NATS"
                ],
                "summary": "Gets streams for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "operator name",
                        "name": "operator",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account name",
                        "name": "account",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "server url",
                        "name": "server_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator": {
            "post": {
                "description": "Add an operator to the store",
                "tags": [
                    "Operator"
                ],
                "summary": "Add an operator",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.addOperatorForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator added",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{name}": {
            "get": {
                "description": "Returns json object with operator description",
                "tags": [
                    "Operator"
                ],
                "summary": "Describes an operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "$ref": "#/definitions/src.OperatorDescription"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an operator and returns json with status ok if successful",
                "tags": [
                    "Operator"
                ],
                "summary": "Updates an operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.updateOperatorForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account": {
            "post": {
                "description": "Add an account with given operator to the store",
                "tags": [
                    "Account"
                ],
                "summary": "Add an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account data in json format",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.addAccountForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account added",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{account}/user": {
            "post": {
                "description": "Add user with given operator and account to the store",
                "tags": [
                    "User"
                ],
                "summary": "Add user",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.addUserForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User added",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{account}/user/{name}": {
            "get": {
                "description": "Returns json object with user description",
                "tags": [
                    "User"
                ],
                "summary": "Describes user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "$ref": "#/definitions/src.UserDescription"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Revokes a user",
                "tags": [
                    "User"
                ],
                "summary": "Revokes a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an user and returns json with status ok if successful",
                "tags": [
                    "User"
                ],
                "summary": "Updates an user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add tags for user - comma separated list or option can be specified multiple times",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.updateUserForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{account}/users": {
            "get": {
                "description": "Returns json list of existing users for given operator's account",
                "tags": [
                    "User"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users for given operator's account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{name}": {
            "get": {
                "description": "Returns json object with account description",
                "tags": [
                    "Account"
                ],
                "summary": "Describes an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "$ref": "#/definitions/src.AccountDescription"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an account and returns json with status ok if successful",
                "tags": [
                    "Account"
                ],
                "summary": "Updates an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account data in json format",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.updateAccountForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/accounts": {
            "get": {
                "description": "Returns json list of existing accounts for given operator",
                "tags": [
                    "Account"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator's accounts list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operators": {
            "get": {
                "description": "Returns json list of existing operators",
                "tags": [
                    "Operator"
                ],
                "summary": "List operators",
                "responses": {
                    "200": {
                        "description": "Operators list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pushAccount": {
            "post": {
                "description": "Returns json with confirmation",
                "tags": [
                    "Account"
                ],
                "summary": "Push account to server",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.postPushForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Acknowledgement",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/secret": {
            "post": {
                "tags": [
                    "Secret"
                ],
                "summary": "Creates secret with credentials",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/src.createSecretForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 ok",
                        "schema": {
                            "$ref": "#/definitions/src.SecretResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "nats.AckPolicy": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "AckNonePolicy",
                "AckAllPolicy",
                "AckExplicitPolicy"
            ]
        },
        "nats.ConsumerConfig": {
            "type": "object",
            "properties": {
                "ack_policy": {
                    "$ref": "#/definitions/nats.AckPolicy"
                },
                "ack_wait": {
                    "$ref": "#/definitions/time.Duration"
                },
                "backoff": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/time.Duration"
                    }
                },
                "deliver_group": {
                    "type": "string"
                },
                "deliver_policy": {
                    "$ref": "#/definitions/nats.DeliverPolicy"
                },
                "deliver_subject": {
                    "description": "Push based consumers.",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "durable_name": {
                    "type": "string"
                },
                "filter_subject": {
                    "type": "string"
                },
                "flow_control": {
                    "type": "boolean"
                },
                "headers_only": {
                    "type": "boolean"
                },
                "idle_heartbeat": {
                    "$ref": "#/definitions/time.Duration"
                },
                "inactive_threshold": {
                    "description": "Ephemeral inactivity threshold.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ]
                },
                "max_ack_pending": {
                    "type": "integer"
                },
                "max_batch": {
                    "description": "Pull based options.",
                    "type": "integer"
                },
                "max_deliver": {
                    "type": "integer"
                },
                "max_expires": {
                    "$ref": "#/definitions/time.Duration"
                },
                "max_waiting": {
                    "type": "integer"
                },
                "mem_storage": {
                    "description": "Force memory storage.",
                    "type": "boolean"
                },
                "num_replicas": {
                    "description": "Generally inherited by parent stream and other markers, now can be configured directly.",
                    "type": "integer"
                },
                "opt_start_seq": {
                    "type": "integer"
                },
                "opt_start_time": {
                    "type": "string"
                },
                "rate_limit_bps": {
                    "description": "Bits per sec",
                    "type": "integer"
                },
                "replay_policy": {
                    "$ref": "#/definitions/nats.ReplayPolicy"
                },
                "sample_freq": {
                    "type": "string"
                }
            }
        },
        "nats.DeliverPolicy": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "DeliverAllPolicy",
                "DeliverLastPolicy",
                "DeliverNewPolicy",
                "DeliverByStartSequencePolicy",
                "DeliverByStartTimePolicy",
                "DeliverLastPerSubjectPolicy"
            ]
        },
        "nats.DiscardPolicy": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "DiscardOld",
                "DiscardNew"
            ]
        },
        "nats.ExternalStream": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "deliver": {
                    "type": "string"
                }
            }
        },
        "nats.Placement": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "nats.ReplayPolicy": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "ReplayInstantPolicy",
                "ReplayOriginalPolicy"
            ]
        },
        "nats.RetentionPolicy": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "LimitsPolicy",
                "InterestPolicy",
                "WorkQueuePolicy"
            ]
        },
        "nats.StorageType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "FileStorage",
                "MemoryStorage"
            ]
        },
        "nats.StreamConfig": {
            "type": "object",
            "properties": {
                "allow_rollup_hdrs": {
                    "type": "boolean"
                },
                "deny_delete": {
                    "type": "boolean"
                },
                "deny_purge": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "discard": {
                    "$ref": "#/definitions/nats.DiscardPolicy"
                },
                "duplicate_window": {
                    "$ref": "#/definitions/time.Duration"
                },
                "max_age": {
                    "$ref": "#/definitions/time.Duration"
                },
                "max_bytes": {
                    "type": "integer"
                },
                "max_consumers": {
                    "type": "integer"
                },
                "max_msg_size": {
                    "type": "integer"
                },
                "max_msgs": {
                    "type": "integer"
                },
                "max_msgs_per_subject": {
                    "type": "integer"
                },
                "mirror": {
                    "$ref": "#/definitions/nats.StreamSource"
                },
                "name": {
                    "type": "string"
                },
                "no_ack": {
                    "type": "boolean"
                },
                "num_replicas": {
                    "type": "integer"
                },
                "placement": {
                    "$ref": "#/definitions/nats.Placement"
                },
                "republish": {
                    "description": "Allow republish of the message after being sequenced and stored.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/nats.SubjectMapping"
                        }
                    ]
                },
                "retention": {
                    "$ref": "#/definitions/nats.RetentionPolicy"
                },
                "sealed": {
                    "type": "boolean"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nats.StreamSource"
                    }
                },
                "storage": {
                    "$ref": "#/definitions/nats.StorageType"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template_owner": {
                    "type": "string"
                }
            }
        },
        "nats.StreamSource": {
            "type": "object",
            "properties": {
                "external": {
                    "$ref": "#/definitions/nats.ExternalStream"
                },
                "filter_subject": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opt_start_seq": {
                    "type": "integer"
                },
                "opt_start_time": {
                    "type": "string"
                }
            }
        },
        "nats.SubjectMapping": {
            "type": "object",
            "properties": {
                "dest": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                }
            }
        },
        "src.AccountDescription": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nats": {
                    "type": "object",
                    "properties": {
                        "authorization": {
                            "type": "object",
                            "properties": {
                                "auth_users": {}
                            }
                        },
                        "default_permissions": {
                            "type": "object",
                            "properties": {
                                "pub": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "sub": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        },
                        "limits": {
                            "type": "object",
                            "properties": {
                                "conn": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "integer"
                                },
                                "exports": {
                                    "type": "integer"
                                },
                                "imports": {
                                    "type": "integer"
                                },
                                "leaf": {
                                    "type": "integer"
                                },
                                "payload": {
                                    "type": "integer"
                                },
                                "subs": {
                                    "type": "integer"
                                },
                                "wildcards": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "src.NATSResourceForm": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "server_url": {
                    "type": "string"
                },
                "stream_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "src.OperatorDescription": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nats": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "src.SecretInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "src.SecretResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "secret": {
                    "$ref": "#/definitions/src.SecretInfo"
                }
            }
        },
        "src.SimpleJSONResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "src.UserDescription": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nats": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "integer"
                        },
                        "payload": {
                            "type": "integer"
                        },
                        "pub": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "sub": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "subs": {
                            "type": "integer"
                        },
                        "type": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "src.addAccountForm": {
            "type": "object",
            "properties": {
                "allow_pub": {
                    "type": "string"
                },
                "allow_pub_response": {
                    "type": "string"
                },
                "allow_pubsub": {
                    "type": "string"
                },
                "allow_sub": {
                    "type": "string"
                },
                "deny_pub": {
                    "type": "string"
                },
                "deny_pubsub": {
                    "type": "string"
                },
                "deny_sub": {
                    "type": "string"
                },
                "expiry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "response_ttl": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "src.addNatsConsumerForm": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/nats.ConsumerConfig"
                },
                "meta": {
                    "$ref": "#/definitions/src.NATSResourceForm"
                }
            }
        },
        "src.addNatsStreamForm": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/nats.StreamConfig"
                },
                "meta": {
                    "$ref": "#/definitions/src.NATSResourceForm"
                }
            }
        },
        "src.addOperatorForm": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "expiry": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean"
                },
                "generate_signing_key": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "sys": {
                    "type": "boolean"
                }
            }
        },
        "src.addUserForm": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "src.createSecretForm": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "secret_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "src.postPushForm": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "server_list": {
                    "type": "string"
                }
            }
        },
        "src.storeConfigForm": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                }
            }
        },
        "src.updateAccountForm": {
            "type": "object",
            "properties": {
                "conns": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disallow_bearer": {
                    "type": "boolean"
                },
                "exports": {
                    "type": "string"
                },
                "imports": {
                    "type": "string"
                },
                "info_url": {
                    "type": "string"
                },
                "js_consumer": {
                    "type": "string"
                },
                "js_disk_storage": {
                    "type": "string"
                },
                "js_max_ack_pending": {
                    "type": "string"
                },
                "js_max_bytes_required": {
                    "type": "string"
                },
                "js_max_disk_stream": {
                    "type": "string"
                },
                "js_max_mem_stream": {
                    "type": "string"
                },
                "js_mem_storage": {
                    "type": "string"
                },
                "js_streams": {
                    "type": "string"
                },
                "js_tier": {
                    "type": "string"
                },
                "leaf_conns": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "rm_js_tier": {
                    "type": "string"
                },
                "rm_sk": {
                    "type": "string"
                },
                "rm_tag": {
                    "type": "string"
                },
                "subscriptions": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "wildcard_exports": {
                    "type": "boolean"
                }
            }
        },
        "src.updateOperatorForm": {
            "type": "object",
            "properties": {
                "account_jwt_server_url": {
                    "type": "string"
                },
                "require_signing_keys": {
                    "type": "boolean"
                },
                "rm_account_jwt_server_url": {
                    "type": "string"
                },
                "rm_service_url": {
                    "type": "string"
                },
                "rm_tag": {
                    "type": "string"
                },
                "service_url": {
                    "type": "string"
                },
                "system_account": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "src.updateUserForm": {
            "type": "object",
            "properties": {
                "allow_pub": {
                    "type": "string"
                },
                "allow_pub_response": {
                    "type": "string"
                },
                "allow_pubsub": {
                    "type": "string"
                },
                "allow_sub": {
                    "type": "string"
                },
                "bearer": {
                    "type": "boolean"
                },
                "conn_type": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "deny_pub": {
                    "type": "string"
                },
                "deny_pubsub": {
                    "type": "string"
                },
                "deny_sub": {
                    "type": "string"
                },
                "expiry": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "response_ttl": {
                    "type": "string"
                },
                "rm": {
                    "type": "string"
                },
                "rm_conn_type": {
                    "type": "string"
                },
                "rm_response_perms": {
                    "type": "string"
                },
                "rm_source_network": {
                    "type": "string"
                },
                "rm_tag": {
                    "type": "string"
                },
                "rm_time": {
                    "type": "string"
                },
                "source_network": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "subs": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "storage.AccountServerMap": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
