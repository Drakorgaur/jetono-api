{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/bind": {
            "get": {
                "description": "Returns json object with context",
                "tags": [
                    "Account"
                ],
                "summary": "read context bound to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Returns json with confirmation",
                "tags": [
                    "Account"
                ],
                "summary": "Bind context to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "servers",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/creds/operator/{operator}/account/{account}/user/{name}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Generate user credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operators list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User was not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator": {
            "post": {
                "description": "Add an operator to the store",
                "tags": [
                    "Operator"
                ],
                "summary": "Add an operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "generate a signing key with the operator",
                        "name": "generate-signing-key",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "generate system account with the operator (if specified will be signed with signing key)",
                        "name": "sys",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "on import, overwrite existing when already present",
                        "name": "force",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "valid from ('0' is always, '3d' is three days) - yyyy-mm-dd, #m(inutes), #h(ours), #d(ays), #w(eeks), #M(onths), #y(ears)",
                        "name": "start",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "valid until ('0' is always, '2M' is two months) - yyyy-mm-dd, #m(inutes), #h(ours), #d(ays), #w(eeks), #M(onths), #y(ears)",
                        "name": "expiry",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator added",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{name}": {
            "get": {
                "description": "Returns json object with operator description",
                "tags": [
                    "Operator"
                ],
                "summary": "Describes an operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "$ref": "#/definitions/src.OperatorDescription"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an operator and returns json with status ok if successful",
                "tags": [
                    "Operator"
                ],
                "summary": "Updates an operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "add tags for user - comma separated list or option can be specified multiple times",
                        "name": "tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove tag - comma separated list or option can be specified multiple times",
                        "name": "rm-tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set account jwt server url for nsc sync (only http/https/nats urls supported if updating with nsc)",
                        "name": "account-jwt-server-url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set system account by account by public key or name",
                        "name": "system-account",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add an operator service url - comma separated list or option can be specified multiple times",
                        "name": "service-url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove an operator service url - comma separated list or option can be specified multiple times",
                        "name": "rm-service-url",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "require accounts/user to be signed with a signing key",
                        "name": "require-signing-keys",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "clear account server url",
                        "name": "rm-account-jwt-server-url",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account": {
            "post": {
                "description": "Add an account with given operator to the store",
                "tags": [
                    "Account"
                ],
                "summary": "Add an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the amount of time the default permission is valid (global) - [#ms(millis) | #s(econds) | m(inutes) | h(ours)] - Default is no time limit.",
                        "name": "response-ttl",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "%s to limit how often a client can publish to reply subjects [with an optional count, --allow-pub-response=n] (global)",
                        "name": "allow-pub-response",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add publish %s - comma separated list or option can be specified multiple times",
                        "name": "allow-pub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add publish and subscribe %s - comma separated list or option can be specified multiple times",
                        "name": "allow-pubsub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add subscribe %s - comma separated list or option can be specified multiple times",
                        "name": "allow-sub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add deny publish %s - comma separated list or option can be specified multiple times",
                        "name": "deny-pub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add deny publish and subscribe %s - comma separated list or option can be specified multiple times",
                        "name": "deny-pubsub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add deny subscribe %s - comma separated list or option can be specified multiple times",
                        "name": "deny-sub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "valid from ('0' is always, '3d' is three days) - yyyy-mm-dd, #m(inutes), #h(ours), #d(ays), #w(eeks), #M(onths), #y(ears)",
                        "name": "start",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "valid until ('0' is always, '2M' is two months) - yyyy-mm-dd, #m(inutes), #h(ours), #d(ays), #w(eeks), #M(onths), #y(ears)",
                        "name": "expiry",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account added",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{account}/user": {
            "post": {
                "description": "Add user with given operator and account to the store",
                "tags": [
                    "User"
                ],
                "summary": "Add user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User added",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{account}/user/{name}": {
            "get": {
                "description": "Returns json object with user description",
                "tags": [
                    "User"
                ],
                "summary": "Describes user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "$ref": "#/definitions/src.UserDescription"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Revokes a user",
                "tags": [
                    "User"
                ],
                "summary": "Revokes a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an user and returns json with status ok if successful",
                "tags": [
                    "User"
                ],
                "summary": "Updates an user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "add tags for user - comma separated list or option can be specified multiple times",
                        "name": "tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove tag - comma separated list or option can be specified multiple times",
                        "name": "rm-tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "valid from ('0' is always, '3d' is three days) - yyyy-mm-dd, #m(inutes), #h(ours), #d(ays), #w(eeks), #M(onths), #y(ears)",
                        "name": "start",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "valid until ('0' is always, '2M' is two months) - yyyy-mm-dd, #m(inutes), #h(ours), #d(ays), #w(eeks), #M(onths), #y(ears)",
                        "name": "expiry",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "`add start-end time range of the form ",
                        "name": "time",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "`remove start-end time by start time ",
                        "name": "rm-time",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set the locale with which time values are interpreted",
                        "name": "locale",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add source network for connection - comma separated list or option can be specified multiple times",
                        "name": "source-network",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove source network for connection - comma separated list or option can be specified multiple times",
                        "name": "rm-source-network",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set\tallowed\tconnection\ttypes:\t%s\t%s\t%s\t%s\t%s\t%s\t-\tcomma\tseparated\tlist\tor\toption\tcan\tbe\tspecified\tmultiple\ttimes, jwt.ConnectionTypeLeafnode, jwt.ConnectionTypeMqtt, jwt.ConnectionTypeStandard, jwt.ConnectionTypeWebsocket, jwt.ConnectionTypeLeafnodeWS, jwt.ConnectionTypeMqttWS))",
                        "name": "conn-type",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove connection types - comma separated list or option can be specified multiple times",
                        "name": "rm-conn-type",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum number of subscriptions (-1 is unlimited)",
                        "name": "subs",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum data in bytes for the user (-1 is unlimited)",
                        "name": "data",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum message payload in bytes for the account (-1 is unlimited)",
                        "name": "payload",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "no connect challenge required for user",
                        "name": "bearer",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "the amount of stime sthe s%s sis svalid s(global) - s[#ms(millis) | #s(econds) | m(inutes) | h(ours)] - sDefault sis no time limit., typeName))",
                        "name": "response-ttl",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "%s to slimit how soften sa sclient scan spublish sto sreply ssubjects\t[with an optional count, --allow-pub-response=n] (global), typeName))",
                        "name": "allow-pub-response",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add publish s%s s- scomma sseparated slist sor soption scan sbe sspecified smultiple stimes, typeName))",
                        "name": "allow-pub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add publish sand ssubscribe s%s s- scomma sseparated slist sor soption scan sbe sspecified\tmultiple stimes, typeName))",
                        "name": "allow-pubsub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add subscribe s%s s- scomma sseparated slist sor soption scan sbe sspecified multiple stimes, typeName))",
                        "name": "allow-sub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add deny spublish s%s s- scomma sseparated slist sor soption scan sbe sspecified smultiple\ttimes, typeName))",
                        "name": "deny-pub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add deny spublish sand ssubscribe s%s s- scomma sseparated slist sor soption scan sbe sspecified multiple times, typeName))",
                        "name": "deny-pubsub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "add deny ssubscribe s%s s- scomma sseparated slist sor soption scan sbe sspecified smultiple\ttimes, typeName))",
                        "name": "deny-sub",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove sresponse ssettings sfrom s%s, typeName))",
                        "name": "rm-response-perms",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove spublish/subscribe sand sdeny s%s - comma separated\tlist or\toption can be specified multiple times, typeName))",
                        "name": "rm",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{account}/users": {
            "get": {
                "description": "Returns json list of existing users for given operator's account",
                "tags": [
                    "User"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "account",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users for given operator's account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/account/{name}": {
            "get": {
                "description": "Returns json object with account description",
                "tags": [
                    "Account"
                ],
                "summary": "Describes an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator description",
                        "schema": {
                            "$ref": "#/definitions/src.AccountDescription"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an account and returns json with status ok if successful",
                "tags": [
                    "Account"
                ],
                "summary": "Updates an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "add tags for user - comma separated list or option can be specified multiple times",
                        "name": "tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove tag - comma separated list or option can be specified multiple times",
                        "name": "rm-tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum active connections for the account (-1 is unlimited)",
                        "name": "conns",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum active leaf node connections for the account (-1 is unlimited)",
                        "name": "leaf-conns",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum data in bytes for the account (-1 is unlimited)",
                        "name": "data",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum number of exports for the account (-1 is unlimited)",
                        "name": "exports",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum number of imports for the account (-1 is unlimited)",
                        "name": "imports",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum message payload in bytes for the account (-1 is unlimited)",
                        "name": "payload",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "set maximum subscription for the account (-1 is unlimited)",
                        "name": "subscriptions",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "exports can contain wildcards",
                        "name": "wildcard-exports",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "require user jwt to not be bearer token",
                        "name": "disallow-bearer",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "remove signing key - comma separated list or option can be specified multiple times",
                        "name": "rm-sk",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description for this account",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Link for more info on this account",
                        "name": "info-url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: replication tier (0 creates a configuration that applies to all assets) ",
                        "name": "js-tier",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: remove replication limits for the specified tier (0 is the global tier) this flag is exclusive of all other js flags",
                        "name": "rm-js-tier",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set maximum memory storage in bytes for the account (-1 is unlimited / 0 disabled) (units: k/m/g/t kib/mib/gib/tib)",
                        "name": "js-mem-storage",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set maximum disk storage in bytes for the account (-1 is unlimited / 0 disabled) (units: k/m/g/t kib/mib/gib/tib)",
                        "name": "js-disk-storage",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set maximum streams for the account (-1 is unlimited)",
                        "name": "js-streams",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set maximum consumer for the account (-1 is unlimited)",
                        "name": "js-consumer",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set maximum size of a memory stream for the account (-1 is unlimited / 0 disabled) (units: k/m/g/t kib/mib/gib/tib)",
                        "name": "js-max-mem-stream",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set maximum size of a disk stream for the account (-1 is unlimited / 0 disabled) (units: k/m/g/t kib/mib/gib/tib)",
                        "name": "js-max-disk-stream",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set whether max stream is required when creating a stream",
                        "name": "js-max-bytes-required",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JetStream: set number of maximum acks that can be pending for a consumer in the account",
                        "name": "js-max-ack-pending",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "account to edit",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "$ref": "#/definitions/src.SimpleJSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operator/{operator}/accounts": {
            "get": {
                "description": "Returns json list of existing accounts for given operator",
                "tags": [
                    "Account"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operator name",
                        "name": "operator",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator's accounts list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operators": {
            "get": {
                "description": "Returns json list of existing operators",
                "tags": [
                    "Operator"
                ],
                "summary": "List operators",
                "responses": {
                    "200": {
                        "description": "Operators list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "src.AccountDescription": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nats": {
                    "type": "object",
                    "properties": {
                        "authorization": {
                            "type": "object",
                            "properties": {
                                "auth_users": {}
                            }
                        },
                        "default_permissions": {
                            "type": "object",
                            "properties": {
                                "pub": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "sub": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        },
                        "limits": {
                            "type": "object",
                            "properties": {
                                "conn": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "integer"
                                },
                                "exports": {
                                    "type": "integer"
                                },
                                "imports": {
                                    "type": "integer"
                                },
                                "leaf": {
                                    "type": "integer"
                                },
                                "payload": {
                                    "type": "integer"
                                },
                                "subs": {
                                    "type": "integer"
                                },
                                "wildcards": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "src.OperatorDescription": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nats": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "src.SimpleJSONResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "src.UserDescription": {
            "type": "object",
            "properties": {
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nats": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "integer"
                        },
                        "payload": {
                            "type": "integer"
                        },
                        "pub": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "sub": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "subs": {
                            "type": "integer"
                        },
                        "type": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "sub": {
                    "type": "string"
                }
            }
        }
    }
}